% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/EM_wrap.R
\name{EM_wrap}
\alias{EM_wrap}
\title{EM Algorithm Wrapper Function for Deconvolution of Methylation Data}
\usage{
EM_wrap(
  type,
  bulk_beta = NULL,
  ref_beta = NULL,
  bulk_meth = NULL,
  bulk_cov = NULL,
  ref_meth = NULL,
  ref_cov = NULL,
  bulk_rna = NULL,
  ref_rna = NULL,
  num_iterations = 150,
  bulk_fac,
  mapping = NULL,
  stopping = 1e-04,
  stopping_pi = 5e-04,
  cell_size,
  omega = NULL,
  parallel = TRUE,
  ncore = 90
)
}
\arguments{
\item{type}{Specifies the type of DNAm data being used ('array' or 'seq').}

\item{bulk_beta}{Bulk methylation beta values (if applicable).}

\item{ref_beta}{Reference DNAm beta values.}

\item{bulk_meth}{Bulk DNAm methylated counts data.}

\item{bulk_cov}{Bulk DNAM coverage data.}

\item{ref_meth}{Reference DNAm methylated counts data.}

\item{ref_cov}{Reference coverage data.}

\item{bulk_rna}{Bulk RNA data.}

\item{ref_rna}{Reference RNA data.}

\item{num_iterations}{Number of EM iterations to perform.}

\item{bulk_fac}{Bulk factor used in processing.}

\item{mapping}{Optional mapping parameter.}

\item{stopping}{Stopping criterion for EM convergence.}

\item{stopping_pi}{Stopping criterion for pi convergence.}

\item{cell_size}{Cell size of RNA deconvolution.}

\item{omega}{Parameter to choose between DNAm (1) part and RNA (0) part.}

\item{parallel}{Logical flag indicating whether to enable parallel computation. If TRUE, parallel computation will be used.}

\item{ncore}{Number of cores for parallel processing.}
}
\value{
Returns a list of estimated deconvolution results.
}
\description{
This function wraps around the core EM deconvolution logic, handling array or sequencing 
data and processing the inputs. It supports parallel processing and allows for different 
types of input data (arrays or sequencing data) to be processed accordingly.
}
\examples{
# Example usage for sequencing data:
result <- EM_wrap("seq", bulk_beta = bulk_beta_matrix, ref_beta = ref_beta_matrix, parallel = TRUE)
}
